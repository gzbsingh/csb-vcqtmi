{"version":3,"sources":["component/Todolist.js","component/Todo.jsx","component/AddTodo.jsx","component/TodoApp.jsx","App.js","index.js"],"names":["initialState","counter","todos","id","text","reducer","state","action","type","newCounter","newTodo","idx","findIndex","t","todo","Object","assign","splice","Todo","remove","edit","useState","mode","setMode","setText","className","onClick","value","onChange","e","target","AddTodo","add","TodoApp","useReducer","dispatch","map","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.d323c77c.chunk.js","sourcesContent":["export const initialState = {\r\n  counter: 2,\r\n  todos: [\r\n    {\r\n      id: 1,\r\n      text: \"One\"\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Two\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add\": {\r\n      const newCounter = state.counter + 1;\r\n      const newTodo = {\r\n        id: newCounter,\r\n        text: action.text\r\n      };\r\n      return {\r\n        counter: newCounter,\r\n        todos: [...state.todos, newTodo]\r\n      };\r\n    }\r\n    case \"edit\": {\r\n      const idx = state.todos.findIndex((t) => t.id === action.id);\r\n      const todo = Object.assign({}, state.todos[idx]);\r\n      todo.text = action.text;\r\n      const todos = Object.assign([], state.todos);\r\n      todos.splice(idx, 1, todo);\r\n      return {\r\n        counter: state.counter,\r\n        todos: todos\r\n      };\r\n    }\r\n    case \"remove\": {\r\n      const idx = state.todos.findIndex((t) => t.id === action.id);\r\n      const todos = Object.assign([], state.todos);\r\n      todos.splice(idx, 1);\r\n      return {\r\n        counter: state.counter,\r\n        todos: todos\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nconst Todo = ({ todo, remove, edit }) => {\r\n  const [mode, setMode] = useState(\"list\");\r\n  const [text, setText] = useState(todo.text);\r\n  return (\r\n    <div className=\"Todo\">\r\n      {mode === \"list\" ? (\r\n        <>\r\n          <span className=\"TodoText\">{todo.text}</span>\r\n          <button className=\"RemoveTodo\" onClick={remove}>\r\n            Remove\r\n          </button>\r\n          <button className=\"EditTodo\" onClick={() => setMode(\"edit\")}>\r\n            Edit\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            className=\"EditTodoInput\"\r\n          />\r\n          <button\r\n            className=\"EditTodoSave\"\r\n            onClick={() => {\r\n              edit(text);\r\n              setMode(\"list\");\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n          <button className=\"EditTodoCancel\" onClick={() => setMode(\"list\")}>\r\n            Cancel\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddTodo = ({ add }) => {\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <div className=\"AddTodo\">\r\n      <input\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        className=\"AddTodoInput\"\r\n      />\r\n      <button\r\n        className=\"AddTodoButton\"\r\n        onClick={() => {\r\n          add(text);\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React, { useReducer } from \"react\";\r\nimport { initialState, reducer } from \"./Todolist\";\r\nimport Todo from \"./Todo.jsx\";\r\nimport AddTodo from \"./AddTodo.jsx\";\r\n\r\nconst TodoApp = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <>\r\n      <AddTodo add={(text) => dispatch({ type: \"add\", text: text })} />\r\n      {state.todos.map((t) => (\r\n        <Todo\r\n          key={t.id}\r\n          todo={t}\r\n          remove={() => dispatch({ type: \"remove\", id: t.id })}\r\n          edit={(text) => dispatch({ type: \"edit\", id: t.id, text: text })}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default TodoApp;\r\n","import TodoApp from \"./component/TodoApp\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}